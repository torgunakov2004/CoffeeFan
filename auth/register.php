<?php
session_start();

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è CSRF-—Ç–æ–∫–µ–Ω–∞
if (empty($_SESSION['csrf_token'])) {
    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
}

// –†–µ–¥–∏—Ä–µ–∫—Ç –µ—Å–ª–∏ —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
if (!empty($_SESSION['user'])) {
    header('Location: ../index.php');
    exit();
}
?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CoffeeeFan | –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</title>
    <link rel="stylesheet" href="auth_style.css?<?= time() ?>">
    <link rel="icon" href="../img/favicon.ico" type="image/x-icon">
</head>
<body>
    <div class="auth-container">
        <img src="../img/logo.svg" alt="CoffeeeFan Logo" class="auth-logo">
        <h1 class="auth-title">–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç</h1>

        <form action="../config/signup.php" method="post" autocomplete="on" id="registerForm">
            <input type="hidden" name="csrf_token" value="<?= htmlspecialchars($_SESSION['csrf_token']) ?>">

            <div class="name-fields">
                <div class="input-group">
                    <label for="name">–ò–º—è</label>
                    <input type="text" id="name" name="name" placeholder="–ò–≤–∞–Ω" required
                           value="<?= !empty($_SESSION['old']['name']) ? htmlspecialchars($_SESSION['old']['name']) : '' ?>">
                </div>

                <div class="input-group">
                    <label for="last_name">–§–∞–º–∏–ª–∏—è</label>
                    <input type="text" id="last_name" name="last_name" placeholder="–ò–≤–∞–Ω–æ–≤" required
                           value="<?= !empty($_SESSION['old']['last_name']) ? htmlspecialchars($_SESSION['old']['last_name']) : '' ?>">
                </div>
            </div>

            <div class="input-group">
                <label for="login">–õ–æ–≥–∏–Ω</label>
                <input type="text" id="login" name="login" placeholder="ivanov" required
                       value="<?= !empty($_SESSION['old']['login']) ? htmlspecialchars($_SESSION['old']['login']) : '' ?>">
                <div class="hint">–¢–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã</div>
            </div>

            <div class="input-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" placeholder="ivan@example.com" required
                       value="<?= !empty($_SESSION['old']['email']) ? htmlspecialchars($_SESSION['old']['email']) : '' ?>">
            </div>

            <div class="input-group">
                <label for="password">–ü–∞—Ä–æ–ª—å</label>
                <div class="password-wrapper">
                    <input type="password" id="password" name="password" placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢" required minlength="8">
                    <button type="button" class="toggle-password" aria-label="–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å">üëÅÔ∏è</button>
                </div>
                <div class="password-strength">
                    <div class="strength-bar"></div>
                    <div class="hint">–ú–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤</div>
                </div>
            </div>

            <div class="input-group">
                <label for="password_confirm">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è</label>
                <div class="password-wrapper">
                    <input type="password" id="password_confirm" name="password_confirm" placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢" required>
                    <button type="button" class="toggle-password" aria-label="–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å">üëÅÔ∏è</button>
                </div>
            </div>

            <?php if (!empty($_SESSION['error'])): ?>
                <div class="alert error"><?= htmlspecialchars($_SESSION['error']) ?></div>
                <?php unset($_SESSION['error']); ?>
            <?php endif; ?>

            <?php if (!empty($_SESSION['success'])): ?>
                <div class="alert success"><?= htmlspecialchars($_SESSION['success']) ?></div>
                <?php unset($_SESSION['success']); ?>
            <?php endif; ?>

            <div class="terms-agreement">
                <input type="checkbox" id="terms" name="terms" required>
                <label for="terms">–Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å <a href="../list_footer/terms.php" target="_blank">—É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</a></label>
            </div>

            <button type="submit" class="auth-button">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
            
            <div class="auth-footer">
                <p>–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? <a href="authorization.php">–í–æ–π—Ç–∏</a></p>
                <p>–∏–ª–∏ <a href="../index.php">–≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a></p>
            </div>
        </form>
    </div>

    <script>
        // Password toggle functionality
        document.querySelectorAll('.toggle-password').forEach(button => {
            button.addEventListener('click', function() {
                const input = this.previousElementSibling;
                const type = input.getAttribute('type') === 'password' ? 'text' : 'password';
                input.setAttribute('type', type);
                this.textContent = type === 'password' ? 'üëÅÔ∏è' : 'üîí';
            });
        });

        // Password strength indicator
        const passwordInput = document.getElementById('password');
        const strengthBar = document.querySelector('.strength-bar');

        passwordInput.addEventListener('input', function() {
            const strength = calculatePasswordStrength(this.value);
            strengthBar.style.width = `${strength}%`;
            strengthBar.style.backgroundColor = getStrengthColor(strength);
        });

        function calculatePasswordStrength(password) {
            let strength = 0;
            if (password.length > 0) strength += Math.min(25, password.length * 5);
            if (/[A-Z]/.test(password)) strength += 15;
            if (/[0-9]/.test(password)) strength += 20;
            if (/[^A-Za-z0-9]/.test(password)) strength += 40;
            return Math.min(100, strength);
        }

        function getStrengthColor(strength) {
            if (strength < 40) return '#e74c3c';
            if (strength < 70) return '#f39c12';
            return '#2ecc71';
        }

        // Form validation
        document.getElementById('registerForm').addEventListener('submit', function(e) {
            const password = document.getElementById('password');
            const confirm = document.getElementById('password_confirm');
            
            if (password.value !== confirm.value) {
                e.preventDefault();
                // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–∫–∏
                let errorDiv = document.querySelector('.password-mismatch-error');
                if (!errorDiv) {
                    errorDiv = document.createElement('div');
                    errorDiv.className = 'alert error password-mismatch-error';
                    confirm.parentNode.insertBefore(errorDiv, confirm.nextSibling);
                }
                errorDiv.textContent = '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç';
            }
        });

        // –£–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è
        document.getElementById('password_confirm').addEventListener('input', function() {
            const errorDiv = document.querySelector('.password-mismatch-error');
            if (errorDiv) {
                errorDiv.remove();
            }
        });
    </script>
</body>
</html>
<?php
// –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
if (isset($_SESSION['old'])) {
    unset($_SESSION['old']);
}
?>